<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="67964" started-at="2020-12-11T15:06:05Z" finished-at="2020-12-11T15:07:13Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="67964" started-at="2020-12-11T15:06:05Z" finished-at="2020-12-11T15:07:13Z">
      <class name="testcases.Login_testcase1">
        <test-method status="PASS" signature="initialize()[pri:0, instance:testcases.Login_testcase1@3ecd23d9]" name="initialize" is-config="true" duration-ms="10792" started-at="2020-12-11T15:06:05Z" finished-at="2020-12-11T15:06:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSetup(java.lang.reflect.Method)[pri:0, instance:testcases.Login_testcase1@3ecd23d9]" name="testSetup" is-config="true" duration-ms="5" started-at="2020-12-11T15:06:16Z" finished-at="2020-12-11T15:06:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Login_testcase1.Login() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetup -->
        <test-method status="PASS" signature="Login()[pri:1, instance:testcases.Login_testcase1@3ecd23d9]" name="Login" duration-ms="1865" started-at="2020-12-11T15:06:16Z" description="DP-62" finished-at="2020-12-11T15:06:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="PASS" signature="writeResult(org.testng.ITestResult)[pri:0, instance:testcases.Login_testcase1@3ecd23d9]" name="writeResult" is-config="true" duration-ms="27647" started-at="2020-12-11T15:06:18Z" finished-at="2020-12-11T15:06:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login status=SUCCESS method=Login_testcase1.Login()[pri:1, instance:testcases.Login_testcase1@3ecd23d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeResult -->
        <test-method status="PASS" signature="testSetup(java.lang.reflect.Method)[pri:0, instance:testcases.Login_testcase1@3ecd23d9]" name="testSetup" is-config="true" duration-ms="1" started-at="2020-12-11T15:06:46Z" finished-at="2020-12-11T15:06:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Login_testcase1.viewtimesheet() throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetup -->
        <test-method status="FAIL" signature="viewtimesheet()[pri:2, instance:testcases.Login_testcase1@3ecd23d9]" name="viewtimesheet" duration-ms="48" started-at="2020-12-11T15:06:46Z" description="DP-61" finished-at="2020-12-11T15:06:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[//*[@id="root"]//tbody/tr[1]/td[3]/a// Element not found]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: //*[@id="root"]//tbody/tr[1]/td[3]/a// Element not found
at org.testng.Assert.fail(Assert.java:96)
at base_class.Test_class.getlocator(Test_class.java:76)
at PageObject.HomePage.clickOnViewTimesheetLink(HomePage.java:8)
at testcases.Login_testcase1.viewtimesheet(Login_testcase1.java:47)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewtimesheet -->
        <test-method status="PASS" signature="writeResult(org.testng.ITestResult)[pri:0, instance:testcases.Login_testcase1@3ecd23d9]" name="writeResult" is-config="true" duration-ms="27571" started-at="2020-12-11T15:06:46Z" finished-at="2020-12-11T15:07:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewtimesheet status=FAILURE method=Login_testcase1.viewtimesheet()[pri:2, instance:testcases.Login_testcase1@3ecd23d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeResult -->
        <test-method status="PASS" signature="TeardownTest()[pri:0, instance:testcases.Login_testcase1@3ecd23d9]" name="TeardownTest" is-config="true" duration-ms="0" started-at="2020-12-11T15:07:13Z" finished-at="2020-12-11T15:07:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TeardownTest -->
      </class> <!-- testcases.Login_testcase1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
